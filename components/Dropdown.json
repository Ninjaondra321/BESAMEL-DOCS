{"meta": {"title": "Dropdown", "description": "You can use dropdown for displaying elements that you want to see after you click on button - like a dropdown menu. Note: this is little different from navbar dropdown.", "author": "NoTime", "date": "14.06.2023"}, "page": [{"type": "h1", "innerHtml": "Dropdown"}, {"type": "p", "innerHtml": "You can use dropdown for displaying elements that you want to see after you click on button - like a dropdown menu. Note: this is little different from navbar dropdown."}, {"type": "code", "innerHtml": "<div class=\"dropdown\">\n\t<button class=\"dropdown-button\">Dropdown</button>\n\t<div class=\"dropdown-window\">\n\t\t<a href=\"#\">Link 1</a>\n\t\t<a href=\"#\">Link 2</a>\n\t\t<hr />\n\t\t<a href=\"#\">Link 3</a>\n\t</div>\n</div>\n", "language": "html ", "sample": true}, {"type": "h2", "innerHtml": "Structure"}, {"type": "p", "innerHtml": "Using dropdown in your code is not hard. You just put btn.dropdown-button and .dropdown-window inside a .dropdown. Note, that this doesn't handle reactivity yet."}, {"type": "code", "innerHtml": "<div class=\"dropdown\">\n\t<button class=\"dropdown-button\">Dropdown</button>\n\t<div class=\"dropdown-window\">\n\t\t<a href=\"#\">Link 1</a>\n\t\t<a href=\"#\">Link 2</a>\n\t\t<hr />\n\t\t<a href=\"#\">Link 3</a>\n\t</div>\n</div>\n", "language": "html ", "sample": true}, {"type": "h2", "innerHtml": "Reactivity"}, {"type": "p", "innerHtml": "You can add onClick event on the dopdown-button, so that every time it's clicked, it runs function (e) => {e.currentTarget.parentElement.classList.toggle(\"open\")}"}, {"type": "code", "innerHtml": "<div class=\"dropdown\">\n\t<button class=\"dropdown-button\"\n\t\tonClick={(e) => {e.currentTarget.parentElement.classList.toggle(\"open\")}\n\t\t\t>Dropdown</button>\n\t<div class=\"dropdown-window\">\n\t\t<a href=\"#\">Link 1</a>\n\t\t<a href=\"#\">Link 2</a>\n\t\t<hr />\n\t\t<a href=\"#\">Link 3</a>\n\t</div>\n</div>\n", "language": "html ", "sample": true}]}