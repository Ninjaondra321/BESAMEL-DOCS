{"meta": {"title": "title", "description": "description", "keywords": "keywords", "author": "NoTime", "date": "date"}, "page": [{"type": "h1", "innerHtml": "Structure"}, {"type": "code", "innerHtml": "<div class=\"accordion-nice\">\n\u00a0 <div key=\"0\" class=\"accordion-item opened\" xd=\"0\">\n\u00a0 \u00a0 <button class=\"accordion-header \">Title</button>\n\u00a0 \u00a0 <div class=\"accordion-content\">\n\u00a0 \u00a0 \u00a0 Lorem ipsum dolor sit amet consectetur adipisicing elit. Et, sequi quaerat. Possimus hic, quaerat ut eos repellat sint minus doloremque beatae fuga mollitia nulla perferendis commodi quibusdam sequi? Saepe, est!</div>\n\u00a0 </div>\n\u00a0 <div key=\"1\" class=\"accordion-item closed\" xd=\"0\">\n\u00a0 \u00a0 <button class=\"accordion-header \">Title 02</button>\n\u00a0 \u00a0 <div class=\"accordion-content\">\n\u00a0 \u00a0 \u00a0 Lorem ipsum dolor sit amet consectetur adipisicing elit. Et, sequi quaerat. Possimus hic, quaerat ut eos repellat sint minus doloremque beatae fuga mollitia nulla perferendis commodi quibusdam sequi?\n\u00a0 \u00a0 \u00a0 Saepe, est!\n\u00a0 \u00a0 </div>\n\u00a0 </div>\n</div>\n", "language": "html", "sample": false}, {"type": "h1", "innerHtml": "Functionality"}, {"type": "p", "innerHtml": "The default state is opened and if you put .closed to the accordion-item, it closes. You can put .opened to the opened item, but it's only for clarity."}, {"type": "p", "innerHtml": "If you're not using some jsx component and pteffer onclick, than there's an event you can put to every accordion-heading:"}, {"type": "code", "innerHtml": "<button className=\"accordion-header\"\nonTouch={(e) => { e.target.parentElement.classList.toggle(\"closed\"); }}\nonClick={(e) => { e.target.parentElement.classList.toggle(\"closed\"); }}\n>Heading title</button>\n", "language": "html", "sample": false}, {"type": "h1", "innerHtml": "Options"}, {"type": "h1", "innerHtml": "Design guidelines"}, {"type": "code", "innerHtml": ".accordion-nice .accordion-item {\n\u00a0 \u00a0 \n}\n\n  .accordion-nice .accordion-header {\n\t\u00a0 \n}\n", "language": "css", "sample": false}, {"type": "h1", "innerHtml": "JSX component"}, {"type": "p", "innerHtml": "If you're using React, Solid or another js framework, you can take this jsx component as inspiration."}, {"type": "code", "innerHtml": "/* THIS IS A SOLIDJS COMPONENT - DOESN'T WORK WITH REACT */\n\nimport { createSignal, mergeProps, Match } from \"solid-js\";\n\nfunction Accordion(props) {\n\u00a0 \u00a0 const merged = mergeProps({\n\u00a0 \u00a0 \u00a0 \u00a0 oneOpened: false, open0: true,\n\u00a0 \u00a0 \u00a0 \u00a0 contents: [\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 { header: \"Accordion\", content: <p>Ahojj</p> },\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 { header: \"Accordion\", content: <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Ducimus perferendis provident ipsa nam, impedit fugit placeat assumenda fugiat! Soluta ex numquam aperiam quae itaque aliquam nulla laborum doloribus culpa deserunt?</p> },\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 { header: \"Accordion\", content: <h4> Lorem ipsum dolor sit amet consectetur adipisicing elit. Aliquid voluptatem quae aspernatur dolores, tenetur eius eligendi ipsa facilis deleniti suscipit, unde quas. Ad ratione perspiciatis atque adipisci, ullam laborum deleniti!</h4> },\n\u00a0 \u00a0 \u00a0 \u00a0 ]\n\u00a0 \u00a0 }, props);\n \n\u00a0 \u00a0 const [openedID, setOpenedID] = createSignal(merged.open0 == true ? 0 : -1);\n\n\u00a0 \u00a0 function processOpen(id, e) {\n\u00a0 \u00a0 \u00a0 \u00a0 if (merged.oneOpened && openedID() !== id) {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 setOpenedID(id);\n\u00a0 \u00a0 \u00a0 \u00a0 } else if (merged.oneOpened && openedID() === id) {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 setOpenedID(-1);\n\u00a0 \u00a0 \u00a0 \u00a0 }\n\u00a0 \u00a0 \u00a0 \u00a0 else {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 e.target.parentElement.classList.toggle(\"closed\");\n\u00a0 \u00a0 \u00a0 \u00a0 }\n\u00a0 \u00a0 }\n  \n\u00a0 \u00a0 return (<>\n\u00a0 \u00a0 \u00a0 \u00a0 <div className=\"accordion-nice\">\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {merged.contents.map((item, index) => {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return (<div\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 className={\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"accordion-item \" + (merged.oneOpened ? (openedID() === index ? \"opened\" : \"closed\") : \"closed\")\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\n \n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 xd={openedID()} key={index}>\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <button className=\"accordion-header \"\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 onTouch={(e) => processOpen(index, e)}\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 onClick={(e) => processOpen(index, e)}\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 >\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {item.header}\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 </button>\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <div className=\"accordion-content\">\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {item.content}\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 </div>\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 </div>);\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 })}\n \u00a0 \u00a0 \u00a0 </div> \n\u00a0 \u00a0 </>);\n}\n  \nexport default Accordion;\n", "language": "jsx", "sample": false}]}